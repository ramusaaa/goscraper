version: '3.8'

services:
  scraper-api:
    build: .
    ports:
      - "8080:8080"
    environment:
      - GOSCRAPER_PORT=8080
      - GOSCRAPER_HOST=0.0.0.0
      - GOSCRAPER_AI_ENABLED=true
      - GOSCRAPER_AI_PROVIDER=openai
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOSCRAPER_CACHE_ENABLED=true
      - GOSCRAPER_CACHE_TYPE=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Nginx load balancer (for scaling)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - scraper-api
    restart: unless-stopped

volumes:
  redis_data: